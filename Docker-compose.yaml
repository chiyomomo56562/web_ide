version: "3.8"
services:
  frontend:
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - /app/node_modules
      - ./frontend:/app
    stdin_open: true
  nginx:
    restart: always #서버 정지시 정책
    build:
      dockerfile: Dockerfile
      context: ./nginx
    container_name: nginx
    # volumes추가!
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # ✅ Nginx 설정을 호스트에서 수정 가능
    ports:
      - "3000:80"
    depends_on:
      - frontend
      - backend
  backend:
    build:
      dockerfile: Dockerfile
      context: ./backend
    container_name: backend
    ports:
       - "5000:5000"
    volumes:
      - ./backend/gradle:/app/gradle
      - ./backend/gradlew:/app/gradlew
      - ./backend/settings.gradle:/app/settings.gradle
      - ./backend/build.gradle:/app/build.gradle
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
      # 수정 문제시 주석처리한 것으로 롤백
      # - /gradle
      # - /gradlew
      # - /settings.gradle
      # - /build.gradle
      # - ./backend:/app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://app_db:3306/IDE_DB?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=team5
      - SPRING_DATASOURCE_PASSWORD=team12345
    depends_on:
      - mysql

  mysql:
    image: mysql:8
    restart: unless-stopped
    container_name: app_db
    volumes:
      - ./mysql/mysql_data:/var/lib/mysql
      - ./mysql/sqls:/docker-entrypoint-initdb.d/
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: IDE_DB
      MYSQL_USER: team5
      MYSQL_PASSWORD: team12345
    ports:
      - "3306:3306"
